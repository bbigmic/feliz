"use strict";(()=>{var e={};e.id=402,e.ids=[402],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},1364:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>h,requestAsyncStorage:()=>u,routeModule:()=>c,serverHooks:()=>m,staticGenerationAsyncStorage:()=>p});var o={};t.r(o),t.d(o,{GET:()=>l});var a=t(9303),n=t(8716),i=t(670),s=t(7070),d=t(3524);async function l(){try{console.log("Admin orders API called");let e=new d.PrismaClient;await e.$connect(),console.log("Connected to database");let r=await e.order.count();console.log(`Total orders in database: ${r}`);let t=await e.order.findFirst({orderBy:{createdAt:"desc"},select:{id:!0,email:!0,createdAt:!0}});console.log("Latest order:",t);let o=await e.order.findMany({orderBy:{createdAt:"desc"},include:{user:!0}});console.log(`Found ${o.length} orders in query`);let a=o.slice(0,3).map(e=>({id:e.id,email:e.email,createdAt:e.createdAt}));return console.log("First 3 orders:",a),await e.$disconnect(),s.NextResponse.json({orders:o,debug:{totalCount:r,foundCount:o.length,latestOrder:t,firstThree:a,timestamp:new Date().toISOString()}})}catch(e){return console.error("Error fetching orders:",e),s.NextResponse.json({error:"Błąd pobierania zam\xf3wień",details:String(e)},{status:500})}}let c=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/orders/route",pathname:"/api/admin/orders",filename:"route",bundlePath:"app/api/admin/orders/route"},resolvedPagePath:"/Users/bigmic/Desktop/apki/feliztrade/app/api/admin/orders/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:u,staticGenerationAsyncStorage:p,serverHooks:m}=c,g="/api/admin/orders/route";function h(){return(0,i.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:p})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),o=r.X(0,[276,972],()=>t(1364));module.exports=o})();