"use strict";(()=>{var e={};e.id=628,e.ids=[628],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3026:(e,r,t)=>{t.r(r),t.d(r,{originalPathname:()=>g,patchFetch:()=>x,requestAsyncStorage:()=>l,routeModule:()=>p,serverHooks:()=>m,staticGenerationAsyncStorage:()=>c});var i={};t.r(i),t.d(i,{GET:()=>d});var s=t(9303),n=t(8716),a=t(670),o=t(7070);let u=new(t(3524)).PrismaClient;async function d(){try{console.log("Admin users API called");let e=await u.user.findMany({orderBy:{createdAt:"desc"}});return console.log(`Found ${e.length} users:`,e.map(e=>({id:e.id,email:e.email,isAdmin:e.isAdmin}))),o.NextResponse.json({users:e})}catch(e){return console.error("Error fetching users:",e),o.NextResponse.json({error:"Błąd pobierania użytkownik\xf3w",details:String(e)},{status:500})}finally{await u.$disconnect()}}let p=new s.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/admin/users/route",pathname:"/api/admin/users",filename:"route",bundlePath:"app/api/admin/users/route"},resolvedPagePath:"/Users/bigmic/Desktop/apki/feliztrade/app/api/admin/users/route.ts",nextConfigOutput:"",userland:i}),{requestAsyncStorage:l,staticGenerationAsyncStorage:c,serverHooks:m}=p,g="/api/admin/users/route";function x(){return(0,a.patchFetch)({serverHooks:m,staticGenerationAsyncStorage:c})}}};var r=require("../../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),i=r.X(0,[276,972],()=>t(3026));module.exports=i})();