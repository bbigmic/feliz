"use strict";(()=>{var e={};e.id=390,e.ids=[390],e.modules={3524:e=>{e.exports=require("@prisma/client")},399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},3672:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>E,patchFetch:()=>w,requestAsyncStorage:()=>p,routeModule:()=>c,serverHooks:()=>l,staticGenerationAsyncStorage:()=>m});var a={};r.r(a),r.d(a,{GET:()=>u});var n=r(9303),s=r(8716),o=r(670),i=r(7070),d=r(3524);async function u(){try{let e=new d.PrismaClient;await e.$connect();let t=(process.env.DATABASE_URL||"NOT SET").replace(/\/\/[^:]+:[^@]+@/,"//***:***@"),r=await e.user.count(),a=await e.order.count(),n=await e.software.count(),s=await e.component.count(),o=await e.softwareImage.count(),u=await e.user.findMany({where:{isAdmin:!0},select:{id:!0,email:!0,isAdmin:!0,createdAt:!0}}),c=await e.order.findMany({take:10,orderBy:{createdAt:"desc"},select:{id:!0,email:!0,orderType:!0,status:!0,createdAt:!0,demoConsentAccepted:!0}}),p=await e.order.findFirst({orderBy:{createdAt:"desc"},select:{id:!0,email:!0,orderType:!0,status:!0,createdAt:!0}}),m=await e.$queryRaw`
      SELECT column_name, data_type, is_nullable, column_default
      FROM information_schema.columns 
      WHERE table_name = 'Order'
      ORDER BY ordinal_position
    `,l=await e.$queryRaw`
      SELECT * FROM _prisma_migrations ORDER BY finished_at DESC LIMIT 5
    `,E=await e.$queryRaw`SELECT NOW() as current_time`,w=await e.$queryRaw`
      SELECT 
        current_database() as database_name,
        current_user as current_user,
        version() as postgres_version
    `;return await e.$disconnect(),i.NextResponse.json({success:!0,connection:"OK",timestamp:new Date().toISOString(),environment:"production",databaseUrl:t,connectionInfo:w,counts:{users:r,orders:a,software:n,components:s,softwareImages:o},adminUsers:u,recentOrders:c,latestOrder:p,orderColumns:m,migrationStatus:l,dbTimestamp:E,env:{DATABASE_URL:process.env.DATABASE_URL?"SET":"NOT SET",JWT_SECRET:process.env.JWT_SECRET?"SET":"NOT SET",NODE_ENV:"production"}})}catch(e){return console.error("Debug DB error:",e),i.NextResponse.json({error:String(e),message:"Błąd połączenia z bazą danych",timestamp:new Date().toISOString(),environment:"production"},{status:500})}}let c=new n.AppRouteRouteModule({definition:{kind:s.x.APP_ROUTE,page:"/api/debug-db/route",pathname:"/api/debug-db",filename:"route",bundlePath:"app/api/debug-db/route"},resolvedPagePath:"/Users/bigmic/Desktop/apki/feliztrade/app/api/debug-db/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:p,staticGenerationAsyncStorage:m,serverHooks:l}=c,E="/api/debug-db/route";function w(){return(0,o.patchFetch)({serverHooks:l,staticGenerationAsyncStorage:m})}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),a=t.X(0,[276,972],()=>r(3672));module.exports=a})();